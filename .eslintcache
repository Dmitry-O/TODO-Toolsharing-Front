[{"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\index.js":"1","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\reportWebVitals.js":"2","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\App.js":"3","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\configureStore.js":"4","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Main.js":"5","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Home.js":"6","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\tools.js":"7","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\ActionCreators.js":"8","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Tools.js":"9","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Header.js":"10","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\ActionTypes.js":"11","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\shared\\baseUrl.js":"12","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\auth.js":"13","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\ToolDetails.js":"14","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\wishlist.js":"15","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Wishlist.js":"16","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\rentedTools.js":"17","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\RentedTools.js":"18","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\shared\\discounts.js":"19","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Account.js":"20","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\account.js":"21","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\forms.js":"22"},{"size":595,"mtime":1610314053998,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":405,"mtime":1609693103918,"results":"26","hashOfConfig":"24"},{"size":806,"mtime":1610618602544,"results":"27","hashOfConfig":"24"},{"size":4109,"mtime":1610636355044,"results":"28","hashOfConfig":"24"},{"size":4592,"mtime":1610707488215,"results":"29","hashOfConfig":"24"},{"size":588,"mtime":1610575367734,"results":"30","hashOfConfig":"24"},{"size":13210,"mtime":1610613670416,"results":"31","hashOfConfig":"24"},{"size":2714,"mtime":1610315941195,"results":"32","hashOfConfig":"24"},{"size":9453,"mtime":1610563412959,"results":"33","hashOfConfig":"24"},{"size":876,"mtime":1610564873336,"results":"34","hashOfConfig":"24"},{"size":104,"mtime":1610048757229,"results":"35","hashOfConfig":"24"},{"size":1465,"mtime":1610124718687,"results":"36","hashOfConfig":"24"},{"size":10887,"mtime":1610639509683,"results":"37","hashOfConfig":"24"},{"size":649,"mtime":1610576433471,"results":"38","hashOfConfig":"24"},{"size":3025,"mtime":1610308035665,"results":"39","hashOfConfig":"24"},{"size":679,"mtime":1610380388714,"results":"40","hashOfConfig":"24"},{"size":3798,"mtime":1610551800581,"results":"41","hashOfConfig":"24"},{"size":1835,"mtime":1610559666060,"results":"42","hashOfConfig":"24"},{"size":4912,"mtime":1610640045947,"results":"43","hashOfConfig":"24"},{"size":641,"mtime":1610614791110,"results":"44","hashOfConfig":"24"},{"size":124,"mtime":1610568244193,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"12fq2v7",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\index.js",[],["94","95"],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\reportWebVitals.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\App.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\configureStore.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Main.js",["96","97"],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Home.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\tools.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\ActionCreators.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Tools.js",["98","99","100","101","102","103"],"import React, {useState} from 'react';\r\nimport {Card, CardTitle, CardText, CardImg, CardBody, Breadcrumb, BreadcrumbItem, Input, Row, FormGroup, Label, Button} from 'reactstrap';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction fetching() {\r\n    fetch('http://localhost:3001/tools')\r\n        .then(function(response) {\r\n            return response.json();\r\n        })\r\n        .then(function(myJson) {\r\n            alert(JSON.stringify(myJson));\r\n    });\r\n}\r\n\r\nfunction RenderToolItem({tool}) {\r\n    return(\r\n        <Card className=\"border border-primary h-100\">\r\n            <Link to={`/tools/${tool._id}`} style={{textDecoration: 'none'}}>\r\n                <CardTitle className=\"text-warning\"><h5>{tool.name}</h5></CardTitle>\r\n                <CardBody className=\"col-12\">\r\n                    <CardImg src={baseUrl + tool.image} alt={tool.name}/>\r\n                    <span class=\"badge badge-danger\"><h5>${tool.price}/day</h5></span>\r\n                </CardBody>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction Tools(props) {\r\n    const [search, handleSearch] = useState(\"\");\r\n    \r\n    let filteredTools = props.tools.filter((tool) => {\r\n            return tool.name.toLowerCase().indexOf(search.toLowerCase()) !== -1;\r\n        }\r\n    );\r\n    const tools = filteredTools.map((tool) => {\r\n        return (\r\n            <div key={tool._id} className=\"col-12 col-md-3 mt-3\">\r\n                <RenderToolItem tool={tool} />\r\n            </div>\r\n        );\r\n    })\r\n\r\n    //alert(fetching());\r\n    //console.log(fetching());\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Tools</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3 className=\"text-dark\">Tools</h3>\r\n                        <hr className=\"bg-primary\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Input type=\"text\"\r\n                            value={search}\r\n                            onChange={event => handleSearch(event.target.value)}\r\n                            name=\"search\"\r\n                            className=\"text-dark m-auto col-md-3\"\r\n                            placeholder=\"Tool search\"/>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    {tools}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Tools;","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Header.js",["104","105"],"import React, {Component, useState} from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse,\r\n    NavItem, Button, Modal, ModalHeader, ModalBody,\r\n    FormGroup, Form, Input, Label, Media, ButtonDropdown,\r\n    DropdownToggle, DropdownMenu, DropdownItem, Toast, ToastBody, ToastHeader} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false,\r\n            dropdownOpen: false,\r\n            showToastSuccess: false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n        this.toggleDropdown = this.toggleDropdown.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({isNavOpen: !this.state.isNavOpen});\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({isModalOpen: !this.state.isModalOpen});\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        this.props.loginUser({username: this.username.value, password: this.password.value});\r\n        event.preventDefault();\r\n        if (this.props.auth.isAuthenticated)\r\n            this.setState({showToastSuccess: true});\r\n        //alert(this.props.auth.isAuthenticated);\r\n    }\r\n\r\n    handleLogout() {\r\n        this.props.logoutUser();\r\n        if (!this.props.auth.isAuthenticated)\r\n            this.setState({showToastSuccess: false});\r\n    }\r\n\r\n    toggleDropdown() {\r\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar expand=\"md\" className=\"navb\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav}/>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <NavbarBrand href=\"/\">\r\n                            <img src=\"tool_logo.jpg\" height=\"69\" width=\"55\" alt=\"toolsharing\"/>\r\n                        </NavbarBrand>\r\n                        <Nav navbar className=\"ml-auto\">\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/home\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/tools\">\r\n                                    <span className=\"fa fa-gear fa-lg\"></span> Tools\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/about\">\r\n                                    <span className=\"fa fa-info fa-lg\"></span> About\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/contacts\">\r\n                                    <span className=\"fa fa-address-card fa-lg\"></span> Contacts\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <div className=\"ml-auto\">\r\n                            { this.props.auth.isAuthenticated ?\r\n                                <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\r\n                                    <DropdownToggle caret className=\"bg-warning\">\r\n                                        <span className=\"fa fa-user\"/>\r\n                                        &nbsp;{this.props.auth.user.username}\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                        <DropdownItem>\r\n                                            <Link to=\"/account\" style={{textDecoration: 'none'}}>\r\n                                                <span className=\"fa fa-user fa-lg\"></span> My Account\r\n                                            </Link>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem>\r\n                                            <Link to=\"/wishlist\" style={{textDecoration: 'none'}}>\r\n                                                <span className=\"fa fa-heart fa-lg\"></span> My Wishlist\r\n                                            </Link>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem>\r\n                                            <Link to=\"/rentedTools\" style={{textDecoration: 'none'}}>\r\n                                                <span className=\"fa fa-gear fa-lg\"></span> My Rented Tools\r\n                                            </Link>\r\n                                        </DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </ButtonDropdown>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <Nav className=\"ml-1\" navbar>\r\n                            <NavItem>\r\n                                { !this.props.auth.isAuthenticated ?\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-user-plus fa-lg\"/>\r\n                                    </Button>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </NavItem>\r\n                            <NavItem className=\"ml-1\">\r\n                                    { !this.props.auth.isAuthenticated ?\r\n                                        <Button outline onClick={this.toggleModal}>\r\n                                            <span className=\"fa fa-sign-in fa-lg\"></span>\r\n                                            {this.props.auth.isFetching ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            }\r\n                                        </Button>\r\n                                        :                                  \r\n                                        <Button outline onClick={this.handleLogout}>\r\n                                            <span className=\"fa fa-sign-out fa-lg\"></span>\r\n                                            {this.props.auth.isFetching ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            }\r\n                                        </Button>\r\n                                    }\r\n\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n                </Navbar>\r\n\r\n                <div className=\"pl-auto rounded\">\r\n                    <Toast isOpen={this.state.showToastSuccess}>\r\n                        <ToastHeader>\r\n                            Logging in\r\n                        </ToastHeader>\r\n                        <ToastBody className=\"bg-primary\">\r\n                            You have successfully loged in!\r\n                        </ToastBody>\r\n                    </Toast>\r\n                </div>\r\n            \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal} className=\"text-dark\">Sign up/Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\" className=\"text-dark\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\" className=\"text-dark\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check className=\"text-dark\">\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Sign in</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\ActionTypes.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\shared\\baseUrl.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\auth.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\ToolDetails.js",["106","107","108","109","110","111","112"],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\wishlist.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Wishlist.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\rentedTools.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\RentedTools.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\shared\\discounts.js",["113","114","115","116","117","118"],"export const discounts = (numberOfUnits, numberOfDays, price) => {\r\n    let tariff = \"1 Day+\";\r\n    if (numberOfDays >= 7 && numberOfDays < 30)\r\n        tariff = \"1 Week+\";\r\n    if (numberOfDays >= 30)\r\n        tariff = \"1 Month+\";\r\n\r\n    switch(tariff) {\r\n        case \"1 Day+\": \r\n            if (numberOfUnits == 1)\r\n                return price * numberOfDays;\r\n            if (numberOfUnits >= 2 && numberOfUnits < 6)\r\n                return (price - price * 0.05) * numberOfDays;\r\n            if (numberOfUnits >= 6 && numberOfUnits < 11)\r\n                return (price - price * 0.15) * numberOfDays;\r\n            if (numberOfUnits >= 11 && numberOfUnits < 50)\r\n                return (price - price * 0.25) * numberOfDays;\r\n        case \"1 Week+\": \r\n            if (numberOfUnits == 1)\r\n                return (price - price * 0.1) * numberOfDays;\r\n            if (numberOfUnits >= 2 && numberOfUnits < 6)\r\n                return (price - price * 0.1 - price * 0.05) * numberOfDays;\r\n            if (numberOfUnits >= 6 && numberOfUnits < 11)\r\n                return (price - price * 0.1 - price * 0.15) * numberOfDays;\r\n            if (numberOfUnits >= 11 && numberOfUnits < 50)\r\n                return (price - price * 0.1 - price * 0.25) * numberOfDays;\r\n        case \"1 Month+\": \r\n            if (numberOfUnits == 1)\r\n                return (price - price * 0.2) * numberOfDays;\r\n            if (numberOfUnits >= 2 && numberOfUnits < 6)\r\n                return (price - price * 0.2 - price * 0.05) * numberOfDays;\r\n            if (numberOfUnits >= 6 && numberOfUnits < 11)\r\n                return (price - price * 0.2 - price * 0.15) * numberOfDays;\r\n            if (numberOfUnits >= 11 && numberOfUnits < 50)\r\n                return (price - price * 0.2 - price * 0.25) * numberOfDays;\r\n        default: return 0;\r\n    }\r\n};","C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\components\\Account.js",["119"],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\account.js",[],"C:\\Users\\vasya\\Documents\\Coursera courses\\React\\toolsharing\\src\\redux\\forms.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":13,"column":9,"nodeType":"126","messageId":"127","endLine":13,"endColumn":16},{"ruleId":"124","severity":1,"message":"128","line":14,"column":9,"nodeType":"126","messageId":"127","endLine":14,"endColumn":16},{"ruleId":"124","severity":1,"message":"129","line":2,"column":26,"nodeType":"126","messageId":"127","endLine":2,"endColumn":34},{"ruleId":"124","severity":1,"message":"130","line":2,"column":90,"nodeType":"126","messageId":"127","endLine":2,"endColumn":93},{"ruleId":"124","severity":1,"message":"131","line":2,"column":95,"nodeType":"126","messageId":"127","endLine":2,"endColumn":104},{"ruleId":"124","severity":1,"message":"132","line":2,"column":106,"nodeType":"126","messageId":"127","endLine":2,"endColumn":111},{"ruleId":"124","severity":1,"message":"133","line":2,"column":113,"nodeType":"126","messageId":"127","endLine":2,"endColumn":119},{"ruleId":"124","severity":1,"message":"134","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":18},{"ruleId":"124","severity":1,"message":"135","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":35},{"ruleId":"124","severity":1,"message":"136","line":4,"column":36,"nodeType":"126","messageId":"127","endLine":4,"endColumn":41},{"ruleId":"124","severity":1,"message":"137","line":4,"column":24,"nodeType":"126","messageId":"127","endLine":4,"endColumn":32},{"ruleId":"124","severity":1,"message":"129","line":5,"column":5,"nodeType":"126","messageId":"127","endLine":5,"endColumn":13},{"ruleId":"124","severity":1,"message":"138","line":5,"column":15,"nodeType":"126","messageId":"127","endLine":5,"endColumn":29},{"ruleId":"124","severity":1,"message":"130","line":7,"column":38,"nodeType":"126","messageId":"127","endLine":7,"endColumn":41},{"ruleId":"124","severity":1,"message":"139","line":7,"column":43,"nodeType":"126","messageId":"127","endLine":7,"endColumn":46},{"ruleId":"124","severity":1,"message":"140","line":10,"column":7,"nodeType":"126","messageId":"127","endLine":10,"endColumn":15},{"ruleId":"124","severity":1,"message":"141","line":11,"column":7,"nodeType":"126","messageId":"127","endLine":11,"endColumn":16},{"ruleId":"142","severity":1,"message":"143","line":10,"column":31,"nodeType":"144","messageId":"145","endLine":10,"endColumn":33},{"ruleId":"146","severity":1,"message":"147","line":18,"column":9,"nodeType":"148","messageId":"149","endLine":26,"endColumn":76},{"ruleId":"142","severity":1,"message":"143","line":19,"column":31,"nodeType":"144","messageId":"145","endLine":19,"endColumn":33},{"ruleId":"146","severity":1,"message":"147","line":27,"column":9,"nodeType":"148","messageId":"149","endLine":35,"endColumn":76},{"ruleId":"142","severity":1,"message":"143","line":28,"column":31,"nodeType":"144","messageId":"145","endLine":28,"endColumn":33},{"ruleId":"146","severity":1,"message":"150","line":36,"column":9,"nodeType":"148","messageId":"151","endLine":36,"endColumn":27},{"ruleId":"124","severity":1,"message":"152","line":2,"column":31,"nodeType":"126","messageId":"127","endLine":2,"endColumn":41},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","'baseUrl' is defined but never used.","'CardText' is defined but never used.","'Row' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Button' is defined but never used.","'fetching' is defined but never used.","'useState' is defined but never used.","'Media' is defined but never used.","'CardBody' is defined but never used.","'CardImgOverlay' is defined but never used.","'Col' is defined but never used.","'required' is assigned a value but never used.","'maxLength' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","'InputGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]